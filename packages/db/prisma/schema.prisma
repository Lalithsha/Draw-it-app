generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  password      String
  image         String?
  Room          Room[]

  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Shape        Shape[]
  RefreshToken RefreshToken[]
}

model Room {
  id          String      @id @default(cuid())
  adminId     String
  admin       User        @relation(fields: [adminId], references: [id])
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  isEphemeral Boolean     @default(false)
  Shape       Shape[]
  ShareLink   ShareLink[]
}

model Shape {
  id        String   @id @default(uuid())
  message   String
  userId    String?
  user      User?    @relation(fields: [userId], references: [id])
  roomId    String
  Room      Room     @relation(fields: [roomId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([roomId, createdAt])
}

model RefreshToken {
  id          String    @id @default(uuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  hashedToken String    @unique
  createdAt   DateTime  @default(now())
  expiresAt   DateTime
  revokedAt   DateTime?
  userAgent   String?
  ip          String?

  @@index([userId])
  @@index([expiresAt])
}

model ShareLink {
  id           String    @id @default(uuid())
  roomId       String
  Room         Room      @relation(fields: [roomId], references: [id])
  token        String    @unique
  passcodeHash String?
  expiresAt    DateTime?
  revokedAt    DateTime?
  createdAt    DateTime  @default(now())

  @@index([roomId])
}
